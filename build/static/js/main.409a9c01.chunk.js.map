{"version":3,"sources":["components/form/index.js","components/list/ListItem.js","components/list/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","onSave","editingMode","editingItem","useState","date","setDate","name","setName","location","setLocation","useEffect","onSubmit","id","required","className","placeholder","type","value","onChange","e","target","ListItem","info","onEdit","onDelete","index","color","variant","onClick","ItemList","listItems","map","item","App","items","setItems","setEditingMode","setEditingItem","data","newData","filter","elm","infoWithId","Math","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.409a9c01.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\nconst Form = ({ onSave, editingMode, editingItem}) => {\r\n    const [date, setDate] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [location, setLocation] = useState('');\r\n\r\n    useEffect(() => {\r\n        if(editingMode){\r\n            setDate(editingItem.date);\r\n            setName(editingItem.name);\r\n            setLocation(editingItem.location);\r\n        }\r\n    }, [editingItem, editingMode])\r\n\r\n    const submitForm = () => {\r\n        if(editingMode){\r\n            onSave({\r\n                id: editingItem.id,\r\n                name,\r\n                date,\r\n                location\r\n            })\r\n        }else onSave({date, name, location})\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={() =>submitForm()} >\r\n            <input required className='form-input' placeholder='Date' type='text' value={date} onChange={(e) => setDate(e.target.value) }/>\r\n            <input required className='form-input' placeholder='Name' type='text' value={name} onChange={(e) => setName(e.target.value) }/>\r\n            <input required className='form-input' placeholder='Location' type='text' value={location} onChange={(e) => setLocation(e.target.value) }/>\r\n            <button className='form-button' type='submit'>{editingMode? 'Update' : 'Save'}</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst ListItem = ({info, onEdit, onDelete}) => {\r\n    return (\r\n        <div className='list-item'>\r\n            <div>{info.index}</div>\r\n            <div>{info.date}</div>\r\n            <div>{info.name}</div>\r\n            <div>{info.location}</div>\r\n            <div className='buttons'>\r\n                <button color='secondary' variant='filled' onClick={() => onEdit(info)}>\r\n                    <EditIcon/>\r\n                </button>\r\n                <button color='secondary' variant='filled' onClick={() => onDelete(info)}>\r\n                    <DeleteIcon/>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListItem\r\n","import React from 'react'\r\nimport ListItem from './ListItem';\r\n\r\nconst ItemList = ({listItems, onDelete, onEdit}) => {\r\n\r\n\r\n    return (\r\n        <div className='list'>\r\n            {\r\n                listItems.map((item, index) => \r\n                    <ListItem \r\n                        key={item.id} \r\n                        info={ {...item , index: index + 1 }}\r\n                        onDelete={onDelete}\r\n                        onEdit={onEdit}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemList\r\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\n\nimport Form from './components/form';\nimport ItemList from './components/list';\nimport data from './data/info.json';\n\nfunction App() {\n  const [items, setItems] = useState([]);\n  const [editingMode, setEditingMode] = useState(false);\n  const [editingItem, setEditingItem] = useState({});\n  \n  useEffect(() => {\n    setItems(data);\n    \n  }, [])\n\n  const formHandler = (info) => {\n    if(editingMode){\n      const newData = items.map(item => item.id === info.id ? info : item);\n      setItems(newData);\n      setEditingMode(false);\n    } else {\n      const infoWithId = {...info , id: Math.random()*1000}\n      setItems([...items, infoWithId]);\n    }\n  }\n\n  const onDelete = (item) => {\n    const newData = items.filter( elm => elm.id !== item.id && elm);\n    setItems(newData);\n  }\n\n  const onEdit = (item) => {\n    setEditingMode(true);\n    setEditingItem(item);\n  }\n\n\n  return (\n    <div className=\"App\">\n      <div className='main-section'>\n         <ItemList listItems={items} onEdit={onEdit} onDelete={onDelete} />\n         <Form onSave={formHandler} editingMode={editingMode} editingItem={editingItem}/>\n      </div>\n      <div className='car-modal'></div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}